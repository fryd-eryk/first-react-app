{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","onStopEditing","className","type","value","onChange","target","min","step","max","onClick","NewExpense","FormIsVisible","setFormIsVisible","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selectedYear","onDateChange","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","newEnteredDate","console","log","DEFAULT_VALUES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0ef8a92.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredDate(\"\");\r\n    setEnteredAmount(\"\");\r\n    props.onStopEditing();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onStopEditing}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [FormIsVisible, setFormIsVisible] = useState(false);\r\n\r\n  const onSaveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setFormIsVisible(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setFormIsVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!FormIsVisible && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {FormIsVisible && (\r\n        <ExpenseForm\r\n          onStopEditing={stopEditingHandler}\r\n          onSaveExpenseData={onSaveExpenseDataHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n  const classes = 'card ' + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const onDateChangeHandler = (event) => {\r\n    props.onDateChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selectedYear} onChange={onDateChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from 'react';\r\n\r\nimport './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className='expense-date'>\r\n      <div className='expense-date__month'>{month}</div>\r\n      <div className='expense-date__year'>{year}</div>\r\n      <div className='expense-date__day'>{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\n\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No expenses found :(</h2>\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\"\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n  const dateChangeHandler = (newEnteredDate) => {\r\n    setFilteredYear(newEnteredDate);\r\n    console.log(\"EnteredDate: \" + newEnteredDate);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n    return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selectedYear={filteredYear}\r\n        onDateChange={dateChangeHandler}\r\n      />\r\n      <ExpensesChart expenses={filteredExpenses}></ExpensesChart>\r\n      <ExpensesList items={filteredExpenses}/>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\n\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\nimport Expenses from \"./components/Expenses/Expenses\";\r\n\r\nconst DEFAULT_VALUES = [\r\n  {\r\n    id: \"e1\",\r\n    title: \"Toilet Paper\",\r\n    amount: 94.12,\r\n    date: new Date(2020, 7, 14),\r\n  },\r\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\r\n  {\r\n    id: \"e3\",\r\n    title: \"Car Insurance\",\r\n    amount: 294.67,\r\n    date: new Date(2021, 2, 28),\r\n  },\r\n  {\r\n    id: \"e4\",\r\n    title: \"New Desk (Wooden)\",\r\n    amount: 450,\r\n    date: new Date(2021, 5, 12),\r\n  },\r\n];\r\n\r\nconst App = () => {\r\n  const [expenses, setExpenses] = useState(DEFAULT_VALUES);\r\n\r\n  const addExpenseHandler = (expense) => {\r\n    setExpenses((prevExpenses) => {\r\n      return [expense, ...prevExpenses];\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <NewExpense onAddExpense={addExpenseHandler} />\r\n      <Expenses items={expenses} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}